var mapping = Array(14640027).fill(0);
var agglos  = [];
agglos.push([5453006]);
agglos.push([5453402]);
agglos.push([5453589]);
agglos.push([5453596]);
agglos.push([5453728]);
agglos.push([5453823]);
agglos.push([5453847]);
agglos.push([5453932]);
agglos.push([5453992]);
agglos.push([5454136]);
agglos.push([5454164]);
agglos.push([5454256]);
agglos.push([5454430]);
agglos.push([5454530]);
agglos.push([5454535]);
agglos.push([5454735]);
agglos.push([5454818]);
agglos.push([5454985]);
agglos.push([5454987]);
agglos.push([5455191]);
agglos.push([5455240]);
agglos.push([5455272]);
agglos.push([5455273]);
agglos.push([5455377]);
agglos.push([5455395]);
agglos.push([5455650]);
agglos.push([5455799]);
agglos.push([5455844]);
agglos.push([5455989]);
agglos.push([5456034]);
agglos.push([5456672]);
agglos.push([5457036]);
agglos.push([5457089]);
agglos.push([5457794]);
agglos.push([5457902]);
agglos.push([5460865]);
agglos.push([5461235]);
agglos.push([5461678]);
agglos.push([5462004]);
agglos.push([5462171]);
agglos.push([5462292]);
agglos.push([5462442]);
agglos.push([5462892]);
agglos.push([5462931]);
agglos.push([5463254]);
agglos.push([5463936]);
agglos.push([5465104]);
agglos.push([5465135]);
agglos.push([5465509]);
agglos.push([5524030]);
agglos.push([5524552]);
agglos.push([5526072]);
agglos.push([5526291]);
agglos.push([5526363]);
agglos.push([5526545]);
agglos.push([5526571]);
agglos.push([5526598]);
agglos.push([5526636]);
agglos.push([5526696]);
agglos.push([5526752]);
agglos.push([5526772]);
agglos.push([5526817]);
agglos.push([5526878]);
agglos.push([5526903]);
agglos.push([5526943]);
agglos.push([5526996]);
agglos.push([5527030]);
agglos.push([5527032]);
agglos.push([5527061]);
agglos.push([5527147]);
agglos.push([5527269]);
agglos.push([5527433]);
agglos.push([5527566]);
agglos.push([5527606]);
agglos.push([5527688]);
agglos.push([5527850]);
agglos.push([5527864]);
agglos.push([5528149]);
agglos.push([5528169]);
agglos.push([5528271]);
agglos.push([5528443]);
agglos.push([5528463]);
agglos.push([5528466]);
agglos.push([5528568]);
agglos.push([5528636]);
agglos.push([5528752]);
agglos.push([5529169]);
agglos.push([5529253]);
agglos.push([5529366]);
agglos.push([5529453]);
agglos.push([5529523]);
agglos.push([5529547]);
agglos.push([5529566]);
agglos.push([5529581]);
agglos.push([5529630]);
agglos.push([5529664]);
agglos.push([5529668]);
agglos.push([5529705]);
agglos.push([5529873]);
agglos.push([5529899]);
agglos.push([5530140]);
agglos.push([5530174]);
agglos.push([5530397]);
agglos.push([5530469]);
agglos.push([5530585]);
agglos.push([5530801]);
agglos.push([5530943]);
agglos.push([5531040]);
agglos.push([5531116]);
agglos.push([5531121]);
agglos.push([5531151]);
agglos.push([5531152]);
agglos.push([5531205]);
agglos.push([5531285]);
agglos.push([5531328]);
agglos.push([5531349]);
agglos.push([5531383]);
agglos.push([5531404]);
agglos.push([5531447]);
agglos.push([5531468]);
agglos.push([5531510]);
agglos.push([5531522]);
agglos.push([5531546]);
agglos.push([5531549]);
agglos.push([5531622]);
agglos.push([5531729]);
agglos.push([5531751]);
agglos.push([5533609]);
agglos.push([5534251]);
agglos.push([5534283]);
agglos.push([5534339]);
agglos.push([5534343]);
agglos.push([5534356]);
agglos.push([5534360]);
agglos.push([5534415]);
agglos.push([5534470]);
agglos.push([5534473]);
agglos.push([5534500]);
agglos.push([5534575]);
agglos.push([5534602]);
agglos.push([5534750]);
agglos.push([5534888]);
agglos.push([5534889]);
agglos.push([5535187]);
agglos.push([5535191]);
agglos.push([5535195]);
agglos.push([5535274]);
agglos.push([5535511]);
agglos.push([5535641]);
agglos.push([5535642]);
agglos.push([5535749]);
agglos.push([5536583]);
agglos.push([5536853]);
agglos.push([5537615]);
agglos.push([5537852]);
agglos.push([5538042]);
agglos.push([5538144]);
agglos.push([5538623]);
agglos.push([5538770]);
agglos.push([6539355]);
agglos.push([6545915]);
agglos.push([6546297]);
agglos.push([6606035]);
agglos.push([6606039]);
agglos.push([6606040]);
agglos.push([6606061]);
agglos.push([6606062]);
agglos.push([6606099]);
agglos.push([6606108]);
agglos.push([6606130]);
agglos.push([6606330]);
agglos.push([6606422]);
agglos.push([6606425]);
agglos.push([6606464]);
agglos.push([6606539]);
agglos.push([6614662]);
agglos.push([6614743]);

for(var i = 0; i < agglos.length; i++){
    var segIds = agglos[i];
    for(var j = 0; j < segIds.length; j++){
        mapping[segIds[j]] = (i + 1);
    }
}

var cube = app.oxalis.model.getSegmentationBinary().cube;
cube.setMapping(mapping);