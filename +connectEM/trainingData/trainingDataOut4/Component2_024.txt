var mapping = Array(15030572).fill(0);
var agglos  = [];
agglos.push([2615293]);
agglos.push([2615294]);
agglos.push([2615662]);
agglos.push([2615746]);
agglos.push([2615780]);
agglos.push([2615846]);
agglos.push([2615850]);
agglos.push([2615855]);
agglos.push([2615889]);
agglos.push([2615955]);
agglos.push([2615990]);
agglos.push([2690569]);
agglos.push([2690667]);
agglos.push([2690741]);
agglos.push([2690819]);
agglos.push([2690820]);
agglos.push([2690879]);
agglos.push([2698438]);
agglos.push([2698467]);
agglos.push([3792855]);
agglos.push([3792945]);
agglos.push([3792956]);
agglos.push([3792957]);
agglos.push([3792986]);
agglos.push([3793006]);
agglos.push([3793205]);
agglos.push([3793229]);
agglos.push([3793286]);
agglos.push([3793406]);
agglos.push([3793409]);
agglos.push([3793435]);
agglos.push([3793479]);
agglos.push([3793495]);
agglos.push([3793844]);
agglos.push([3793901]);
agglos.push([3800865]);
agglos.push([3800886]);
agglos.push([3800978]);
agglos.push([3801112]);
agglos.push([3801285]);
agglos.push([3874065]);
agglos.push([3874067]);
agglos.push([3874072]);
agglos.push([3874078]);
agglos.push([3874087]);
agglos.push([3874103]);
agglos.push([3874524]);
agglos.push([3874525]);
agglos.push([3874581]);
agglos.push([3874745]);
agglos.push([3874767]);
agglos.push([3874914]);
agglos.push([3874915]);
agglos.push([3874919]);
agglos.push([3875020]);
agglos.push([3875022]);
agglos.push([3875118]);
agglos.push([3875271]);
agglos.push([3875295]);
agglos.push([3875404]);
agglos.push([3875439]);
agglos.push([3875469]);
agglos.push([3875471]);
agglos.push([3875500]);
agglos.push([3875578]);
agglos.push([3875742]);
agglos.push([3875821]);
agglos.push([3881603]);
agglos.push([3882120]);
agglos.push([3882155]);
agglos.push([3882158]);
agglos.push([3882251]);
agglos.push([3882369]);
agglos.push([3882371]);
agglos.push([3882424]);
agglos.push([3882454]);
agglos.push([3882530]);
agglos.push([3882586]);
agglos.push([3882587]);
agglos.push([3882607]);
agglos.push([3882608]);
agglos.push([3882723]);
agglos.push([3882749]);
agglos.push([3882881]);
agglos.push([3883114]);

for(var i = 0; i < agglos.length; i++){
    var segIds = agglos[i];
    for(var j = 0; j < segIds.length; j++){
        mapping[segIds[j]] = (i + 1);
    }
}

var cube = app.oxalis.model.getSegmentationBinary().cube;
cube.setMapping(mapping);