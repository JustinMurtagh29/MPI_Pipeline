% Written by
%   Alessandro Motta <alessandro.motta@brain.mpg.de>
clear;

%% Configuration
rootDir = '/gaba/u/mberning/results/pipeline/20170217_ROI';
connFile = fullfile(rootDir, 'connectomeState', 'connectome_axons-19-a-partiallySplit-v2_dendrites-wholeCells-03-v2-classified_SynapseAgglos-v8-classified.mat');

minSynPre = 10;

targetClasses = { ...
    'Somata', 'ProximalDendrite', 'ApicalDendrite', ...
    'SmoothDendrite', 'AxonInitialSegment', 'OtherDendrite'};

info = Util.runInfo();

%% Loading data
param = load(fullfile(rootDir, 'allParameter.mat'));
param = param.p;

[conn, syn, axonClasses] = connectEM.Connectome.load(param, connFile);

[conn, axonClasses] = ...
    connectEM.Connectome.prepareForSpecificityAnalysis( ...
        conn, axonClasses, 'minSynPre', minSynPre);

classConn = ...
    connectEM.Connectome.buildClassConnectome( ...
        conn, 'targetClasses', targetClasses);

%% Calculation
clear cur*;
curBinEdges = linspace(0, 1, 21);
curAxonClasses = axonClasses(1:2);

curFig = figure();
curFig.Color = 'white';
curFig.Position(3:4) = [2300, 600];

for curAxonClassIdx = 1:numel(curAxonClasses)
    curAxonClass = curAxonClasses(curAxonClassIdx);
    curClassConn = classConn(curAxonClass.axonIds, :);
    curPriFracs = sum(curClassConn, 1) / sum(curClassConn(:));
    
    for curTargetId = 1:numel(targetClasses)
        curSubAxonMask = curClassConn(:, curTargetId) > 0;

        curCondProbs = curClassConn(curSubAxonMask, :);
        curCondProbs(:, curTargetId) = curCondProbs(:, curTargetId) - 1;
        
        curCondProbs = ...
            curCondProbs(:, curTargetId) ...
            ./ sum(curCondProbs, 2);

       [curExpSynFrac, curExpAxonCounts] = ...
            connectEM.Specificity.calcExpectedDist( ...
                sum(curClassConn, 2), curPriFracs(curTargetId), ...
                'distribution', 'binomial', 'outputFormat', 'absolute');

        curExpAxonCounts(~curExpSynFrac(:, 1)) = [];
        curExpSynFrac(~curExpSynFrac(:, 1), :) = [];
        curExpSynFrac = curExpSynFrac - 1;

        curExpSynFrac = ...
            curExpSynFrac(:, 1) ...
         ./ curExpSynFrac(:, 2);
        curBinCounts = accumarray( ...
            discretize(curExpSynFrac, curBinEdges), ...
            curExpAxonCounts);
        
        curPVal = ...
            connectEM.Specificity.kolmogorovSmirnovTest( ...
                curCondProbs, curExpSynFrac, ...
                'nullWeights', curExpAxonCounts, ...
                'tail', 'smaller');

        curAx = subplot( ...
            numel(curAxonClasses), numel(targetClasses), ...
            curTargetId + numel(targetClasses) * (curAxonClassIdx - 1));
        hold(curAx, 'on');

        histogram(curAx, ...
            curCondProbs, ...
            'BinEdges', curBinEdges, ...
            'DisplayStyle', 'stairs', ...
            'LineWidth', 2);
        histogram(curAx, ...
            'BinCounts', curBinCounts, ...
            'BinEdges', curBinEdges, ...
            'DisplayStyle', 'stairs', ...
            'LineWidth', 2);

        curAx.YScale = 'log';
        curAx.YLim(1) = 10 ^ (-0.1);
    
        annotation( ...
            curFig, ...
            'textbox', curAx.Position, ...
            'String', sprintf('p = %g', curPVal), ...
            'HorizontalAlignment', 'right', ...
            'VerticalAlignment', 'top', ...
            'EdgeColor', 'none');
    end
    
    curAxes = curFig.Children(1:numel(targetClasses));
    
    curLimY = vertcat(curAxes.Children);
    curLimY = arrayfun(@(curH) max(curH.BinCounts), curLimY);
    curLimY = 10 ^ ceil(log10(max(curLimY)));
    
    arrayfun(@(a, l) set(a, 'YLim', [10 ^ (-0.1), curLimY]), curAxes);
end

set(curFig.Children, ...
    'TickDir', 'out', ...
    'XLim', curBinEdges([1, end]), ...
    'PlotBoxAspectRatio', [1, 1, 1], ...
    'DataAspectRatioMode', 'auto')
